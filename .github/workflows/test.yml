name: Hello World on PR Comment and Dispatch

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      AWS_ACCOUNT:
        description: "Select AWS Account for AMI"
        required: true
        type: choice
        options:
          - DEV
          - PROD
      AWS_REGION:
        description: "Select Region for AMI"
        required: true
        type: choice
        options:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - ap-south-1
          - ap-northeast-3
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-north-1
          - sa-east-1
          - me-central-1
      DISTRIBUTION:
        description: "Select Distribution for AMI"
        required: true
        type: choice
        options:
          - ECS
          - EKS
          - amazonLinux
          - RedHat
          - CentOS
          - debian
          - ubuntu
      VERSION:
        description: "Major Release Version for Distribution. ECS/EKS -> LEAVE BLANK, amazonLinux -> 2/2023, RedHat -> 9,CentOS -> 7/8/9, Debian -> 10/11/12, Ubuntu -> 18/20/22"
        required: false
        type: string
      AMI_PREFIX:
        description: "Modify Prefix - AMI Naming Convention"
        required: true
        type: string
        default: scaleops
      FIREWALL:
        description: "Firewall to Setup for the AMI"
        required: true
        type: choice
        options:
          - iptables
          - firewalld
          - ufw
      OPENPORTS:
        description: "Open Custom Ports for Services? (Check for Yes) 80,443 are already open by default"
        required: false
        type: boolean
        default: false
      PORT1:
        description: "Open a Custom Port for Services"
        required: false
        type: string
      PORT2:
        description: "Open a Custom Port for Services"
        required: false
        type: string
      PARTITION:
        description: "Create Partitions? (check for yes)"
        required: true
        type: boolean
        default: false

permissions:
  pull-requests: write
  id-token: write
  issues: write
  contents: read

jobs:
  display-info:
    runs-on: ubuntu-latest
    # Only run for comments on pull requests, by the user and starts with /run-tf
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.issue.pull_request && github.actor != 'github-actions[bot]' && startsWith(github.event.comment.body, '/run-tf')) }}
    steps:
      - name: Display Comment/Dispatch Info
        run: |
          echo "Triggered by: ${{ github.event_name }}"
          if ${{ github.event_name == 'workflow_dispatch' }}; then
            echo "AWS_ACCOUNT: ${{ github.event.inputs.AWS_ACCOUNT }}"
            echo "AWS_REGION: ${{ github.event.inputs.AWS_REGION }}"
            echo "DISTRIBUTION: ${{ github.event.inputs.DISTRIBUTION }}"
            echo "VERSION: ${{ github.event.inputs.VERSION }}"
            echo "AMI_PREFIX: ${{ github.event.inputs.AMI_PREFIX }}"
            echo "FIREWALL: ${{ github.event.inputs.FIREWALL }}"
            echo "OPENPORTS: ${{ github.event.inputs.OPENPORTS }}"
            echo "PORT1: ${{ github.event.inputs.PORT1 }}"
            echo "PORT2: ${{ github.event.inputs.PORT2 }}"
            echo "PARTITION: ${{ github.event.inputs.PARTITION }}"
          elif ${{ github.event_name == 'issue_comment' }}; then
            echo "Comment: ${{ github.event.comment.body }}"
          fi

      - name: Sleep
        run: sleep 60

      - name: Add simple comment to PR
        uses: actions/github-script@v6
        if: ${{ github.event.issue.pull_request && github.actor != 'github-actions[bot]' && startsWith(github.event.comment.body, '/run-tf') }}
        with:
          github-token: ${{ secrets.TOKEN_GH }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Terraform plan completed! Review the plan output above.'
            })